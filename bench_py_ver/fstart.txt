#include <stdio.h>
#include <stdlib.h>
#include "papi.h"
#include <string.h>
#include <sys/time.h>
#define PAPIEVENT_ENVIRONMENT_VARIABLE "PAPI_MON_EVENTS"
long long ** values;
int EventSet=PAPI_NULL;
int event_count;
int papi_retval, num_tests = 1, num_events = 0, i = 0;
volatile double a = 0.5, b = 2.2;

long long** allocate_values_space(int num_tests, int num_events) {
    long long **values;
    int i;

    values =
            ( long long ** ) malloc( ( size_t ) num_tests *
                                     sizeof ( long long * ) );
    if ( values == NULL ) {
        printf("error! cannot allocate memory\n");
        exit( 1 );
    }
    memset( values, 0x0, ( size_t ) num_tests * sizeof ( long long * ) );

    for ( i = 0; i < num_tests; i++ ) {
        values[i] =
                ( long long * ) malloc( ( size_t ) num_events *
                                        sizeof ( long long ) );
        if ( values[i] == NULL ) {
            printf("error! cannot allocate memory\n");
            exit( 1 );
        }
        memset( values[i], 0x00, ( size_t ) num_events * sizeof ( long long ) );
    }
    return ( values );
}
void
dummy( void *array )
{
/* Confuse the compiler so as not to optimize
   away the flops in the calling routine    */
/* Cast the array as a void to eliminate unused argument warning */
    ( void ) array;
}

void do_flops( int n )
{
    int i;
    double c = 0.11;

    for ( i = 0; i < n; i++ ) {
        c += a * b;
    }
    dummy( ( void * ) &c );
}
